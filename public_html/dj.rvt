<?

package require macnugget
package require cowgod

page_init
::cowgod::dbconnect

unset -nocomplain response dj
load_response
set dj_id $response(dj_id)

if {[info exists response(field)] && [info exists response(value)]} {
	set field $response(field)
	if {[string is true -strict $response(value)]} {
		set value TRUE
	} else {
		set value FALSE
	}
	if {[regexp {[a-z]+} $field]} {
		set sql "UPDATE users SET $field = $value WHERE user_id = [pg_quote $dj_id] AND owner IS NOT TRUE;"
		sql_exec $::cowgod::db $sql
		::cowgod::auditlog -user_id $::user(turntable_user_id) -action acledit -target_id $dj_id -value "$field $value" -source "web [remote hostname] ([remote ip_addr])"
	}
}

set sql "SELECT * FROM users WHERE user_id = [pg_quote $dj_id]"
load_array $::cowgod::db $sql dj

opt header 0
page_header -title "DJ Info for $dj(nickname)"

# catch {parray ::user}

::cowgod::buttonbar

set toplimit 10

proc total_time {seconds} {
	set minutes [expr $seconds / 60]
	set hours [expr $minutes / 60]
	return "[comma $hours] hours"
}

if {[info exists dj(nickname)]} {
	set sql "SELECT * FROM joins_expanded WHERE user_id = [pg_quote $dj_id] ORDER BY id DESC LIMIT 1"
	load_array $::cowgod::db $sql lastjoin

	set sql "SELECT count(*) snags, count(DISTINCT user_id) as djs FROM snaglog_expanded WHERE dj_id = [pg_quote $dj_id]"
	load_array $::cowgod::db $sql snags_from

	set sql "SELECT count(*) snags FROM snaglog WHERE user_id = [pg_quote $dj_id]"
	load_array $::cowgod::db $sql snags

	set sql "SELECT count(l.*) as plays, count(DISTINCT l.song_id) as songs,  sum(length) as duration,  avg(length) as avg_seconds,  avg(l.stats_listeners) as avg_listeners, max(l.stats_listeners) as max_listeners, sum(length) as secs,  (SELECT count(v.*) FROM votelog v LEFT JOIN songlog s ON s.id = v.play_id WHERE s.dj_id = [pg_quote $dj_id]) as upvotes,  sum((dj_id=substring(stats_djs from 3 for 24))::integer) as seat_one  FROM songlog_expanded l WHERE dj_id = [pg_quote $dj_id] "

	load_array $::cowgod::db $sql plays

	set sqlprefix "SELECT count(*), sum(length) as total_secs, min(ts) as first,max(ts) as last,max(stats_listeners) as max_listeners FROM songlog_expanded"
	set sql "$sqlprefix WHERE stats_djs ilike '%'||[pg_quote $dj_id]||'%'"
	load_array $::cowgod::db $sql ondeck

	#parray dj
	#parray plays
	#parray ondeck

	webout [el_open div -class row]

	webout [el_open div -class span2]
	webout "<img class=\"img-rounded\" src=\"[::cowgod::avatar_href $lastjoin(avatarid)]\" />"
	webout [el_close div]

	webout [el_open div -class span8]
	webout "<h3>$dj(nickname)</h3>"

	if {[::macnugget::acl_check cowgod_admin]} {
		unset -nocomplain tagline actions
		foreach {flag description toggle} {owner Owner 0 admin Admin 1 trendsetter Trendsetter 1 ignore Ignored 1 bot "Bot" 0} {
			if {[string is true -strict $dj($flag)]} {
				append tagline "[el_open span -class "label label-info"]$description[el_close span] "
				if {$toggle} {
					lappend actions "<li><a tabindex=\"-1\" href=\"?field=$flag;value=false\">Disable $description</a></li>"
				}
			} else {
				if {$toggle} {
					lappend actions "<li><a tabindex=\"-1\" href=\"?field=$flag;value=true\">Enable $description</a></li>"
				}
			}
		}
		if {[info exists tagline]} {
			webout "$tagline"
			webout {<div class="btn-group"><button class="btn btn-small">Admin</button>}
			webout {<button class="btn btn-small dropdown-toggle" data-toggle="dropdown"><span class="caret"></span></button>}
			webout {<ul class="dropdown-menu">}
			webout [join $actions "\n"]
			webout {</ul></div>}
		}
	}

	webout "<p>"
	webout "First seen in the Pit on [clock format [clock scan $dj(added)] -format "%A %d-%B-%Y"]."
	webout "<br />"
	if {$plays(plays) > 0} {
		webout "Spun [comma $plays(songs)] songs in [comma $plays(plays)] plays ([format "%.1f" [expr $plays(songs).0 / $plays(plays).0 * 100]]% unique) totalling [total_time $plays(secs)] with [comma $plays(upvotes)] awesomes."
		webout "<br />"

		if {$ondeck(count) > 0} {
			webout "Been on deck for [comma $ondeck(count)] songs totalling [total_time $ondeck(total_secs)]"
		}
		if {$plays(seat_one) > 0} {
			webout " ([format "%.1f" [expr $plays(seat_one).0 / $ondeck(count).0 * 100]]% hogging first chair - [comma $plays(seat_one)] songs)."
		} else {
			webout " but never been in seat one."
		}
		webout "<br />"
		webout "Had [comma $snags_from(snags)] songs snagged by [comma $snags_from(djs)] different DJs."
		webout "<br />"
	}
	webout "Snagged [comma $snags(snags)] songs from other DJs."
	webout "<br />"
	webout "Enthralled as many as [comma $plays(max_listeners)] listeners with their lack of shame."
	webout "</p>"

	unset -nocomplain aliases
	pg_select $::cowgod::db "select nickname, max(ts) from joins_expanded where user_id = [pg_quote $dj_id] and nickname <> [pg_quote $dj(nickname)] group by nickname" alias {
		lappend aliases $alias(nickname)
	}

	if {[info exists aliases]} {
		webout "<p><i>Also known as: [join $aliases " &middot; "]</i></p>"
	}

	webout [el_close div]
	webout [el_close div]

	set sql "select *,random() from chatlog_expanded where user_id = [pg_quote $dj(user_id)] order by random desc limit 1"
	pg_select $::cowgod::db $sql quote {
		webout "<blockquote>"
		webout "<p>&#8220;$quote(text)&#8221</p>"
		webout "<small>$dj(nickname) (<cite>[clock format [clock scan $quote(ts)] -format "%A, %d-%b-%Y"]</cite>)</small>"
		webout "</blockquote>"
	}

	webout "<hr />"
	webout [el_open div -class row]

	webout [el_open div -class span6]
	set sql "SELECT lower(artist) as artist,count(*) as plays FROM songlog_expanded WHERE dj_id = [pg_quote $dj_id] GROUP BY lower(artist) ORDER BY plays DESC LIMIT $toplimit"
	webout "<h3>Top $toplimit Artists</h3>"
	webout [el_open table -class "table table-striped table-bordered table-condensed"]
	webout "<tr><th>Artist</th><th>Plays</th></tr>"
	pg_select $::cowgod::db $sql buf {
		webout "<tr>"
		webout "<td>$buf(artist)</td>"
		webout "<td style=\"text-align: right;\">[comma $buf(plays)]</td>"
		webout "</tr>"
	}
	webout [el_close table]
	webout [el_close div]

	webout [el_open div -class span6]
	set sql "SELECT lower(song) as song,lower(artist) as artist,max(song_id) as song_id,count(*) as plays FROM songlog_expanded WHERE dj_id = [pg_quote $dj_id] GROUP BY 1,2 ORDER BY plays DESC LIMIT $toplimit"
	webout "<h3>Top $toplimit Songs</h3>"
	webout [el_open table -class "table table-striped table-bordered table-condensed"]
	webout "<tr><th>Song</th><th>Artist</th><th>Plays</th></tr>"
	pg_select $::cowgod::db $sql buf {
		webout "<tr>"
		webout "<td>[el_open a -href [::cowgod::href song $buf(song_id)]]$buf(song)[el_close a]</td>"
		webout "<td>$buf(artist)</td>"
		webout "<td style=\"text-align: right;\">[comma $buf(plays)]</td>"
		webout "</tr>"
	}
	webout [el_close table]
	webout [el_close div]

	webout [el_close div]
}

::cowgod::dbdisconnect

page_footer
page_term

?>
