<?

package require macnugget
package require cowgod

page_init
page_header -title "Turntable.fm Pit of no Shame"

::cowgod::dbconnect

unset -nocomplain response dj
load_response

set toplimit 10

proc total_time {seconds} {
	set minutes [expr $seconds / 60]
	set hours [expr $minutes / 60]
	return "[comma $hours] hours"
}

set id $response(id)

set sql "SELECT * FROM songlog_expanded WHERE id = [pg_quote $id]"
pg_select $::cowgod::db $sql buf {
	array set play [array get buf]
}

if {![array exists play]} {
	puts "<p>Unable to locate this play</p>"

	webout [el_open div -class btn-group]
	pg_select $::cowgod::db "SELECT max(id) as id FROM songlog_expanded WHERE id < [pg_quote $id]" buf {
		webout "[el_open a -href [::cowgod::href play $buf(id)] -class "btn"]Prev</a>"
	}
	pg_select $::cowgod::db "SELECT min(id) as id FROM songlog_expanded WHERE id > [pg_quote $id]" buf {
		webout "[el_open a -href [::cowgod::href play $buf(id)] -class "btn"]Next</a>"
	}
	webout [el_close div]

	::cowgod::dbdisconnect
	page_footer
	page_term
}

set sql "SELECT count(*) as plays, count(DISTINCT dj_id) as djs FROM songlog_expanded where artist ilike [pg_quote $play(artist)] AND song ilike [pg_quote $play(song)]"
pg_select $::cowgod::db $sql buf {
	array set stats [array get buf]
}

if {[info exists play(id)]} {
	set sql "SELECT * FROM songs WHERE song_id = [pg_quote $play(song_id)]"
	pg_select $::cowgod::db $sql buf {
		array set song [array get buf]
	}

	webout [el_open div -class row]

	webout [el_open div -class span2]
	if {[info exists song(coverart)] && $song(coverart) ne "" && $song(coverart) ne "undefined"} {
		webout "<img class=\"img-rounded\" src=\"$song(coverart)\" />"
	}
	webout [el_close div]
	webout [el_open div -class span8]
	webout "<h3>$song(song)</h3>"
	webout "<h4>$song(artist)<br/>$song(album)</h4>"
	webout "<p>Played [el_open a -href [::cowgod::href song $play(song_id)]][comma $stats(plays)][el_close a] times by [comma $stats(djs)] DJs in the Pit</p>"
	webout [el_close div]
	webout [el_close div]
	webout "<hr />"

	webout [el_open table -class "table table-striped table-bordered"]
	webout "<tr colspan=\"$play(stats_djcount)\">[el_open th -style "text-align: center;"]DJs on Deck</th></tr>"
	webout "<tr>"
	foreach dj_id [split [string map {"\"" "" "{" "" "}" ""} $play(stats_djs)] ","] {
		pg_select $::cowgod::db "SELECT * FROM users WHERE user_id = [pg_quote $dj_id]" user {
			if {$dj_id eq $play(dj_id)} {
				webout [el_open td -style "background-color: #ffffcf; text-align: center;"]
			} else {
				webout [el_open td -style "text-align: center;"]
			}
			webout "<img style=\"height: 64px;\"  src=\"[::cowgod::avatar_href $user(live_avatar) headfront]\" /><br />"
			webout "[el_open a -href [::cowgod::href dj $dj_id]]$user(nickname)[el_close a]"
			webout [el_close td]
		}
	}
	webout "</tr>"
	webout "</table>"

	webout "<p>Played in the Pit on [clock format [clock scan $play(ts)] -format "%A %d-%B-%Y at %H:%M:%S UTC"] by $play(nickname)</p>"

	webout "<p>There were $play(stats_listeners) listeners in the room</p>"

	webout "<ul>"
	set sql "SELECT * FROM snaglog_expanded WHERE play_id = $play(id)"
	# webout "<code>$sql</code>"
	pg_select $::cowgod::db $sql snags {
		webout "<li>Snagged by $snags(nickname)</li>"
	}
	webout "</ul>"

	webout [el_open div -class btn-group]
	webout "[el_open a -href [::cowgod::href play [expr $play(id) - 1]] -class "btn"]Prev</a>"
	webout "[el_open a -href [::cowgod::href play [expr $play(id) + 1]] -class "btn"]Next</a>"
	webout [el_close div]

}

::cowgod::dbdisconnect

?>
